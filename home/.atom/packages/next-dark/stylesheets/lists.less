@import "ui-variables";
@import "ui-mixins";
@import "octicon-mixins";

.list-group, .list-tree {
    li:not(.list-nested-item), li.list-nested-item > .list-item {
        .text(normal);
    }

    .generate-list-item-text-color(@class) {
        li:not(.list-nested-item).text-@{class}, li.list-nested-item.text-@{class} > .list-item {
            .text(@class);
        }
    }

    .generate-list-item-text-color(subtle);
    .generate-list-item-text-color(info);
    .generate-list-item-text-color(success);
    .generate-list-item-text-color(warning);
    .generate-list-item-text-color(error);
    .generate-list-item-text-color(selected);

    .generate-list-item-status-color(@color, @status) {
        li:not(.list-nested-item).status-@{status}, li.list-nested-item.status-@{status} > .list-item {
            color: @color;
        }
    }

    .generate-list-item-status-color(@text-color-subtle, ignored);
    .generate-list-item-status-color(@text-color-added, added);
    .generate-list-item-status-color(@text-color-renamed, renamed);
    .generate-list-item-status-color(@text-color-modified, modified);
    .generate-list-item-status-color(@text-color-removed, removed);

    li:not(.list-nested-item).selected, li.list-nested-item.selected > .list-item {
        .text(selected);
    }
}

.select-list ol.list-group, &.select-list ol.list-group {
    li.two-lines {
        .secondary-line {
            color: @text-color-subtle;
        }
        &.selected .secondary-line {
            color: @text-color;
            text-shadow: none;
        }
    }

    // We want to highlight the background of the list items because we dont
    // know their size.
    li.selected {
        background-color: @background-color-selected;

        &:before{
            display: none;
        }
    }

    &.mark-active{
        @active-icon-size: 14px;

        // pad in front of the text where the icon would be We'll pad the non-
        // active items with a 'fake' icon so other classes can pad the item
        // without worrying about the icon padding.
        li:before {
            content: '';
            background-color: transparent;
            position: static;
            display: inline-block;
            left: auto; right: auto;
            height: @active-icon-size;
            width: @active-icon-size;
        }
        > li:not(.active):before {
            margin-right: @component-icon-padding;
        }
        li.active {
            .octicon(check, @active-icon-size);

            &:before {
                margin-right: @component-icon-padding;
                color: @text-color-success;
            }
        }
    }
}

.select-list.popover-list {
    background-color: #4a4e52;
    box-shadow: 0 0 10px @base-border-color;
    padding: @component-padding/2;
    border-radius: @component-border-radius;
    border: 1px solid @overlay-border-color;

    .editor {
        margin-bottom: @component-padding/2;
    }

    .list-group li {
        padding-left: @component-padding/2;
    }
}

.ui-sortable {
    li {
        line-height: 2.5;
    }

    // For sortable lists in the settings view
    li.ui-sortable-placeholder {
        visibility: visible !important;
        background-color: darken(@pane-item-background-color, 10%);
    }
}

li.ui-draggable-dragging, li.ui-sortable-helper {
    line-height: @component-line-height;
    height: @component-line-height;
    border: 0;
    border-radius: 0;
    list-style: none;
    padding: 0 @component-padding;
    background: @background-color-highlight;
    box-shadow: 0 0 1px @base-border-color;
}

// Custom styles, not sure if there is a "correct" place to put these



.list-group li:not(.list-nested-item), .list-tree li:not(.list-nested-item), .list-group li.list-nested-item > .list-item, .list-tree li.list-nested-item > .list-item{
    color: #666;
}

.list-group li:not(.list-nested-item).status-ignored, .list-tree li:not(.list-nested-item).status-ignored, .list-group li.list-nested-item.status-ignored > .list-item, .list-tree li.list-nested-item.status-ignored > .list-item{
    color: #333;
}

.list-group li:not(.list-nested-item).selected, .list-tree li:not(.list-nested-item).selected, .list-group li.list-nested-item.selected > .list-item, .list-tree li.list-nested-item.selected > .list-item{
    color: #999;
}

.list-group li:not(.list-nested-item).status-modified, .list-tree li:not(.list-nested-item).status-modified, .list-group li.list-nested-item.status-modified > .list-item, .list-tree li.list-nested-item.status-modified > .list-item{
    color: #E2B281;
}

.icon-file-directory:before {
    display: none;
}

.list-tree li.list-nested-item.selected > .list-item .icon-file-directory:before {
    display: none;
}

.list-tree li.list-nested-item.status-modified > .list-item .icon-file-directory:before {
    display: none;
}

.no-icon:before, .icon-file-text:before, .icon-book:before, .icon-file-media:before, .icon-file-symlink-file:before, .icon-file-submodule:before {
    display: none;
}
